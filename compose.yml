version: '3.9'
services:
  redis_db:
    image: 'redis:alpine'
    ports:
      - "6380:6379"
  postgres_db:
    image: 'postgres:12'
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root_password
      POSTGRES_DB: another_generic_todo_db
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./postgresql-init.sql:/docker-entrypoint-initdb.d/postgresql-init.sql
  api-admin-resource-server:
     container_name: "API-Admin-Resource-Server"
     build: API-Admin-Resource-Server
     ports:
       - "8080:8080"
     env_file:
       - ./.env
     environment:
       - spring.jpa.hibernate.ddl-auto=update
       - spring.datasource.url=${DATABASE_URL}
       - spring.datasource.username=${DATABASE_USER}
       - spring.datasource.password=${DATABASE_PASSWORD}
       - spring.datasource.driver-class-name=${DATABASE_DRIVER}
       - spring.data.redis.port=${REDIS_PORT}
       - spring.data.redis.host=${REDIS_HOST}
     depends_on:
       - redis_db
       - postgres_db
  api-authorization-server:
    container_name: "API-Authorization-Server"
    build: API-Authorization-Server
    ports:
      - "9090:9090"
    env_file:
      - ./.env
    environment:
      - spring.jpa.hibernate.ddl-auto=update
      - spring.datasource.url=${DATABASE_URL}
      - spring.datasource.username=${DATABASE_USER}
      - spring.datasource.password=${DATABASE_PASSWORD}
      - spring.datasource.driver-class-name=${DATABASE_DRIVER}
    depends_on:
      - redis_db
      - postgres_db
  api-main-resourcer-server:
    container_name: "API-Main-Resourcer-Server"
    build: API-Main-Resource-Server
    ports:
      - "7070:7070"
    env_file:
      - ./.env
    environment:
      - spring.jpa.hibernate.ddl-auto=update
      - spring.datasource.url=${DATABASE_URL}
      - spring.datasource.username=${DATABASE_USER}
      - spring.datasource.password=${DATABASE_PASSWORD}
      - spring.datasource.driver-class-name=${DATABASE_DRIVER}
    depends_on:
      - redis_db
      - postgres_db
      - api-authorization-server
  api-oauth2-client:
    container_name: "API-OAuth2-Client"
    build: API-OAuth2-Client
    ports:
      - "6060:6060"
    environment:
      - spring.security.oauth2.client.provider.spring.issuer-uri=${OAUTH2_CLIENT_ISSUER_URI}
      - application.resourcerserver-uri=${OAUTH2_CLIENT_RESOURCESERVER_URI}
    depends_on:
      - redis_db
      - postgres_db
      - api-admin-resource-server
      - api-authorization-server