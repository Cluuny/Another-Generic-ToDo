version: '3.9'
services:
  redis_db:
    image: 'redis:alpine'
    ports:
      - "6379:6379"
  postgres_db:
    image: 'postgres:12'
    restart: on-failure
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root_password
      POSTGRES_DB: another_generic_todo_db
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./postgresql-init.sql:/docker-entrypoint-initdb.d/postgresql-init.sql
  api-admin-resource-server:
     container_name: "API-Admin-Resource-Server"
     build: API-Admin-Resource-Server
     ports:
       - "8080:8080"
     env_file:
       - ./.env
     environment:
       - spring.jpa.hibernate.ddl-auto=update
       - spring.datasource.url=${DATABASE_URL}
       - spring.datasource.username=${DATABASE_USER}
       - spring.datasource.password=${DATABASE_PASSWORD}
       - spring.datasource.driver-class-name=${DATABASE_DRIVER}
     depends_on:
       - redis_db
       - postgres_db
  api-authorization-server:
    container_name: "API-Authorization-Server"
    build: API-Authorization-Server
    ports:
      - "9090:9090"
    env_file:
      - ./.env
    environment:
      - spring.jpa.hibernate.ddl-auto=update
      - spring.datasource.url=${DATABASE_URL}
      - spring.datasource.username=${DATABASE_USER}
      - spring.datasource.password=${DATABASE_PASSWORD}
      - spring.datasource.driver-class-name=${DATABASE_DRIVER}
    depends_on:
      - redis_db
      - postgres_db